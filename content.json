{"pages":[],"posts":[{"title":"Array","text":"数组1.特点：a.数组一旦被定义，大小不可改变（java特性，长度一开始就定义好了） b.数组是引用数据类型，但是数组可以被定义成存储任意类型8个基本类型 c.数组中的数据类型必须是一致的，和定义的类型一致数组在创建时就一定要声明类型，然后数组就只能存储这个类 型 d.数组有默认值，默认是就是定义类型的默认值 byte short int ---0 long--0L float double ---0.0 char---\\u000 String----null e.数组有顺序，以下标定义 从0-length-1 2.声明a.动态赋值​ 通过下标赋值 1int [] arr; ​ //声明一个变量这个变量是数组类型的，名字都叫做arr 1arr = new int[3]; ​ //给开辟一个空间，大小为3，没有值，把这个空间赋值给变量arr 123int [] arr = new int[3];arr[0] = 12; ​ b.静态初始化 ​ c.默认初始化 3.操作​ a.冒泡排序：比较相邻的两个数 ​ b.增删改 ​ 增：先进行数组扩容 12345678910111213141516171819202122232425262728293031323334353637383940414243public static void main(String[] args) {​ int [] arr1 = {1,2,3,4,5,6,7};​ add(arr1,3,10);​ }​ public static void add(int [] arr,int index,int a) {​ int [] arr2 = new int[arr.length+1];​ for(int i=0;i&lt;arr.length;i++) {​ arr2[i] = arr[i];​ ​ }​ arr = arr2;​ if(index&gt;=arr.length) {​ System.out.println(\"下标越界\");​ }​ else {​ for(int i=arr.length-1;i&gt;=index;i--) {​ arr[i] = arr[i-1];​ }​ arr[index] = a;​ System.out.println(Arrays.toString(arr));​ }​ } ​ c.查询 ​ forEach ​ 格式：for（数据类型 变量名：数组）{} 4.二维数组​ a.动态初始化 1int [][] arr = new int [][]; ​ b.静态赋值 1234567int[][] arr = {｛1，2，3｝，｛4，5，6｝｝","link":"/2020/02/19/Array/"},{"title":"Class","text":"对象和类1.定义类的语法1234567891011121314151617181920212223242526272829303132333435363738394041public class 类名｛//a.属性//b.函数，方法｝//举例public class Dog {​ //属性----成员变量（有默认值）String color;String name;int age;String type;public static void eat(String food) {​ System.out.println(\"狗狗在吃：\"+food);}//加上static 和不加只是调用不同，暂时不加public void shout() {​ System.out.println(type+\"的狗在大叫\");}public void introduce() {​ System.out.println(\"这只泰迪\"+age+\"岁了\");}} 2.定义对象的语法类名 变量名 = new 类名（）；​ 访问属性：对象名.属性名； ​ 访问方法：对象名.方法名； 3.类和对象在内存中的分析4.构造方法​ 每一个类中都有一个默认的隐藏的构造方法（没有参数） ​ 但是当我们写了有参数的构造方法之后，无参数的构造方法就没了，需要手动添加. ​ 构造方法的作用： a.用来创建对象 new+构造方法（构造器）b.初始化成员变量例子： 1234567891011121314151617public Dog() {​ System.out.println(\"构造方法\");​ }​ //有参构造给成员变量赋值​ public Dog(String name,String color,int age) {​ this.name = name ;​ this.color = color;​ this.age = age ;​ }","link":"/2020/02/19/Class/"}],"tags":[{"name":"Arrays","slug":"Arrays","link":"/tags/Arrays/"},{"name":"Object","slug":"Object","link":"/tags/Object/"},{"name":"Class","slug":"Class","link":"/tags/Class/"}],"categories":[{"name":"java学习笔记","slug":"java学习笔记","link":"/categories/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}]}